spring:
  application:
    name: flight-booking-system

  profiles:
    active: local

  # PostgreSQL Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5433/flight_booking
    username: flight_user
    password: flight_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Flyway Configuration
  flyway:
    url: jdbc:postgresql://localhost:5433/flight_booking
    user: flight_user
    password: flight_password
    schemas: public

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6380}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      jedis:
        pool:
          max-active: 50
          max-idle: 10
          min-idle: 2
          max-wait: 2000ms

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9093
    consumer:
      group-id: flight-booking-consumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.flightbooking.domain
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Custom Redis configuration
redis:
  search:
    cache-ttl: 600  # 10 minutes for search cache
  booking:
    reservation-ttl: 300    # 5 minutes for seat reservations
    cleanup-interval: 60    # seconds between cleanup operations

logging:
  level:
    com.flightbooking: INFO
    org.springframework.kafka: WARN
    org.hibernate.SQL: WARN